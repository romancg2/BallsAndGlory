<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="fm_database.sqlite" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure browser pragmas query" current="1"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="100"/><column_width id="3" width="2980"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><table title="players_attr" custom_title="0" dock_id="4" table="4,12:mainplayers_attr"/><dock_state state="000000ff00000000fd0000000100000002000005bb00000390fc0100000004fb000000160064006f0063006b00420072006f00770073006500310100000000000005bb0000000000000000fb000000160064006f0063006b00420072006f00770073006500320100000000000005bb0000000000000000fb000000160064006f0063006b00420072006f00770073006500350100000000000002480000000000000000fb000000160064006f0063006b00420072006f00770073006500340100000000000005bb0000012900ffffff000005bb0000000000000004000000040000000800000008fc00000000"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="clubs" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_" freeze_columns="0"><sort><column index="0" mode="0"/></sort><column_widths><column index="1" value="35"/><column index="2" value="191"/><column index="3" value="77"/><column index="4" value="65"/><column index="5" value="255"/><column index="6" value="39"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="clubs_competition" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_" freeze_columns="0"><sort><column index="1" mode="0"/></sort><column_widths><column index="1" value="129"/><column index="2" value="50"/><column index="3" value="95"/><column index="4" value="59"/><column index="5" value="41"/></column_widths><filter_values><column index="2" value="=3"/></filter_values><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="clubs_monthly_economy" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_" freeze_columns="0"><sort><column index="2" mode="0"/></sort><column_widths><column index="1" value="35"/><column index="2" value="87"/><column index="3" value="50"/><column index="4" value="83"/><column index="5" value="111"/><column index="6" value="78"/><column index="7" value="96"/><column index="8" value="87"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="competitions" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_" freeze_columns="0"><sort/><column_widths><column index="1" value="35"/><column index="2" value="119"/><column index="3" value="63"/><column index="4" value="35"/><column index="5" value="47"/><column index="6" value="39"/><column index="7" value="99"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="fixtures" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_" freeze_columns="0"><sort><column index="1" mode="0"/></sort><column_widths><column index="1" value="39"/><column index="2" value="87"/><column index="3" value="89"/><column index="4" value="87"/><column index="5" value="93"/><column index="6" value="77"/><column index="7" value="75"/><column index="8" value="46"/><column index="9" value="116"/><column index="10" value="98"/><column index="11" value="96"/></column_widths><filter_values><column index="4" value="=3"/></filter_values><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="match_scorers" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_" freeze_columns="0"><sort><column index="2" mode="0"/></sort><column_widths><column index="1" value="39"/><column index="2" value="63"/><column index="3" value="65"/><column index="4" value="79"/></column_widths><filter_values><column index="1" value="=220"/></filter_values><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="players" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_" freeze_columns="0"><sort><column index="9" mode="1"/></sort><column_widths><column index="1" value="35"/><column index="2" value="103"/><column index="3" value="175"/><column index="4" value="87"/><column index="5" value="263"/><column index="6" value="53"/><column index="7" value="50"/><column index="8" value="71"/><column index="9" value="63"/><column index="10" value="88"/><column index="11" value="63"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="players_attr" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_" freeze_columns="0"><sort/><column_widths><column index="1" value="63"/><column index="2" value="50"/><column index="3" value="72"/><column index="4" value="67"/><column index="5" value="84"/><column index="6" value="72"/><column index="7" value="82"/><column index="8" value="83"/><column index="9" value="61"/><column index="10" value="76"/><column index="11" value="96"/><column index="12" value="83"/><column index="13" value="70"/><column index="14" value="68"/><column index="15" value="84"/><column index="16" value="88"/><column index="17" value="55"/><column index="18" value="92"/><column index="19" value="88"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="players_contract" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_" freeze_columns="0"><sort><column index="6" mode="1"/></sort><column_widths><column index="1" value="35"/><column index="2" value="63"/><column index="3" value="50"/><column index="4" value="103"/><column index="5" value="91"/><column index="6" value="87"/><column index="7" value="63"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="staff" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_" freeze_columns="0"><sort><column index="8" mode="0"/></sort><column_widths><column index="1" value="35"/><column index="2" value="70"/><column index="3" value="68"/><column index="4" value="217"/><column index="5" value="167"/><column index="6" value="321"/><column index="7" value="88"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="staff_attr" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_" freeze_columns="0"><sort/><column_widths><column index="1" value="53"/><column index="2" value="96"/><column index="3" value="72"/><column index="4" value="70"/><column index="5" value="76"/><column index="6" value="64"/><column index="7" value="71"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table><table schema="main" name="staff_contract" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_" freeze_columns="0"><sort><column index="6" mode="1"/></sort><column_widths><column index="1" value="35"/><column index="2" value="53"/><column index="3" value="50"/><column index="4" value="119"/><column index="5" value="91"/><column index="6" value="87"/><column index="7" value="162"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table></browse_table_settings></tab_browse><tab_sql><sql name="Players attributes">select p.id, first_name, last_name, date_of_birth, gv.value_date-date_of_birth as agevalue, position, nationality, value, is_retired, pa.*, cl.name
from 
players p 
join players_attr pa on p.id = pa.player_id
join clubs cl on p.club_id = cl.id
left join global_val gv on 1 = 1
where gv.var_name = 'GAME_DATE' and NOT is_retired 
--and  p.id = 120
--where p.id = 270 
--and 
--DATE('now')-date_of_birth = 18
order by --DATE('now')-date_of_birth desc --at_pot_ability-at_curr_ability asc;
---value 
--at_pot_ability --
at_curr_ability
--gv.value_date-date_of_birth
--gv.value_date-date_of_birth
desc</sql><sql name="Players situations">select first_name, last_name, age, sit.sit_id, sit_description, opt.opt_id, opt_description, con.conseq_id, conseq_description, conseq_probab  ,
sum(conseq_probab) over (partition by opt.opt_id )

from 
players p 
join players_attr pa on p.id = pa.player_id
join player_situ ps on p.id = ps.player_id
join situations sit on ps.sit_id = sit.sit_id
join situ_options sitop on sit.sit_id = sitop.sit_id
join options opt on opt.opt_id = sitop.opt_id
join options_conseq optcon on optcon.opt_id = opt.opt_id
join consequences con on con.conseq_id = optcon.conseq_id
--where 
order by age desc--at_pot_ability-at_curr_ability asc;

</sql><sql name="League Table 1">select * from (
WITH season_matches AS (
    SELECT 
        f.id AS fixture_id,
        f.fixture_date,
        f.home_club_id,
        f.away_club_id,
        f.home_goals,
        f.away_goals,
        f.competition_id,
        CASE 
            WHEN strftime('%m-%d', f.fixture_date) BETWEEN '08-01' AND '12-31'
                 THEN strftime('%Y', f.fixture_date) || '-' || (CAST(strftime('%Y', f.fixture_date) AS INTEGER) + 1)
            ELSE (CAST(strftime('%Y', f.fixture_date) AS INTEGER) - 1) || '-' || strftime('%Y', f.fixture_date)
        END AS season
    FROM fixtures f
    WHERE f.competition_id = 1
      AND f.played = 1
),
club_stats AS (
    SELECT
        c.id AS club_id,
        sm.competition_id,
        sm.season,
        SUM(
            CASE 
              WHEN sm.home_club_id = c.id AND sm.home_goals &gt; sm.away_goals THEN 1
              WHEN sm.away_club_id = c.id AND sm.away_goals &gt; sm.home_goals THEN 1
              ELSE 0 END
        ) AS wins,
        SUM(
            CASE 
              WHEN sm.home_goals = sm.away_goals 
                   AND (sm.home_club_id = c.id OR sm.away_club_id = c.id) THEN 1
              ELSE 0 END
        ) AS draws,
        SUM(
            CASE 
              WHEN sm.home_club_id = c.id AND sm.home_goals &lt; sm.away_goals THEN 1
              WHEN sm.away_club_id = c.id AND sm.away_goals &lt; sm.home_goals THEN 1
              ELSE 0 END
        ) AS losses,
        SUM(
            CASE 
              WHEN sm.home_club_id = c.id AND sm.home_goals &gt; sm.away_goals THEN 3
              WHEN sm.away_club_id = c.id AND sm.away_goals &gt; sm.home_goals THEN 3
              WHEN sm.home_goals = sm.away_goals 
                   AND (sm.home_club_id = c.id OR sm.away_club_id = c.id) THEN 1
              ELSE 0 END
        ) AS points,
        SUM(CASE WHEN sm.home_club_id = c.id THEN sm.home_goals 
                 WHEN sm.away_club_id = c.id THEN sm.away_goals ELSE 0 END) AS goals_for,
        SUM(CASE WHEN sm.home_club_id = c.id THEN sm.away_goals 
                 WHEN sm.away_club_id = c.id THEN sm.home_goals ELSE 0 END) AS goals_against,
        COUNT(CASE WHEN sm.home_club_id = c.id OR sm.away_club_id = c.id THEN 1 END) AS matches_played
    FROM clubs c
    JOIN season_matches sm 
      ON sm.home_club_id = c.id OR sm.away_club_id = c.id
    GROUP BY c.id, sm.competition_id, sm.season
)
SELECT 
    cs.season,
    c.name AS club,
    cs.matches_played,
    cs.wins,
    cs.draws,
    cs.losses,
    cs.points,
    cs.goals_for,
    cs.goals_against,
    (cs.goals_for - cs.goals_against) AS goal_diff
FROM club_stats cs
JOIN clubs c ON c.id = cs.club_id
WHERE cs.competition_id = 1
ORDER BY cs.season, cs.points DESC, goal_diff DESC, cs.goals_for DESC, c.name
)
where season = '2025-2026';
</sql><sql name="League Table 2">select * from (
WITH season_matches AS (
    SELECT 
        f.id AS fixture_id,
        f.fixture_date,
        f.home_club_id,
        f.away_club_id,
        f.home_goals,
        f.away_goals,
        f.competition_id,
        CASE 
            WHEN strftime('%m-%d', f.fixture_date) BETWEEN '08-01' AND '12-31'
                 THEN strftime('%Y', f.fixture_date) || '-' || (CAST(strftime('%Y', f.fixture_date) AS INTEGER) + 1)
            ELSE (CAST(strftime('%Y', f.fixture_date) AS INTEGER) - 1) || '-' || strftime('%Y', f.fixture_date)
        END AS season
    FROM fixtures f
    WHERE f.competition_id = 2
      AND f.played = 1
),
club_stats AS (
    SELECT
        c.id AS club_id,
        sm.competition_id,
        sm.season,
        SUM(
            CASE 
              WHEN sm.home_club_id = c.id AND sm.home_goals &gt; sm.away_goals THEN 1
              WHEN sm.away_club_id = c.id AND sm.away_goals &gt; sm.home_goals THEN 1
              ELSE 0 END
        ) AS wins,
        SUM(
            CASE 
              WHEN sm.home_goals = sm.away_goals 
                   AND (sm.home_club_id = c.id OR sm.away_club_id = c.id) THEN 1
              ELSE 0 END
        ) AS draws,
        SUM(
            CASE 
              WHEN sm.home_club_id = c.id AND sm.home_goals &lt; sm.away_goals THEN 1
              WHEN sm.away_club_id = c.id AND sm.away_goals &lt; sm.home_goals THEN 1
              ELSE 0 END
        ) AS losses,
        SUM(
            CASE 
              WHEN sm.home_club_id = c.id AND sm.home_goals &gt; sm.away_goals THEN 3
              WHEN sm.away_club_id = c.id AND sm.away_goals &gt; sm.home_goals THEN 3
              WHEN sm.home_goals = sm.away_goals 
                   AND (sm.home_club_id = c.id OR sm.away_club_id = c.id) THEN 1
              ELSE 0 END
        ) AS points,
        SUM(CASE WHEN sm.home_club_id = c.id THEN sm.home_goals 
                 WHEN sm.away_club_id = c.id THEN sm.away_goals ELSE 0 END) AS goals_for,
        SUM(CASE WHEN sm.home_club_id = c.id THEN sm.away_goals 
                 WHEN sm.away_club_id = c.id THEN sm.home_goals ELSE 0 END) AS goals_against,
        COUNT(CASE WHEN sm.home_club_id = c.id OR sm.away_club_id = c.id THEN 1 END) AS matches_played
    FROM clubs c
    JOIN season_matches sm 
      ON sm.home_club_id = c.id OR sm.away_club_id = c.id
    GROUP BY c.id, sm.competition_id, sm.season
)
SELECT 
    cs.season,
    c.name AS club,
    cs.matches_played,
    cs.wins,
    cs.draws,
    cs.losses,
    cs.points,
    cs.goals_for,
    cs.goals_against,
    (cs.goals_for - cs.goals_against) AS goal_diff
FROM club_stats cs
JOIN clubs c ON c.id = cs.club_id
WHERE cs.competition_id = 2
ORDER BY cs.season, cs.points DESC, goal_diff DESC, cs.goals_for DESC, c.name
)
where season = '2025-2026';
</sql><sql name="Players by club">select p.id, first_name, last_name, date_of_birth, gv.value_date-date_of_birth as agevalue, position, nationality, value/1000000 value_millions, is_retired, 

--at_luck/100, 
--at_selfcont/100, 
--at_honour/100, 
--at_crazyness/100, 
at_working/100, 
--at_sexatract/100, 
--at_friendship/100, 
at_speed/100, 
at_dribbling/100, 
at_goalkeeping/100, 
at_defending/100, 
at_passing/100, 
at_scoring/100, 
--at_happiness/100, 
--at_confidence/100, 
--at_hope/100, 
at_curr_ability/10, 
at_pot_ability/10, 

cl.name,

pc.wage,

pc.contract_start,
pc.contract_end
from 
players p 
join players_attr pa on p.id = pa.player_id
join clubs cl on p.club_id = cl.id
join players_contract pc on p.id = pc.player_id
left join global_val gv on 1 = 1
where gv.var_name = 'GAME_DATE' --and NOT is_retired 
--and cl.name = 'Liverpool'
and cl.name = 'Arsenal'
--and cl.name = 'Manchester City'
--and cl.name = 'AFC Bournemouth'
--and cl.name = 'Brentford'
--and cl.name = 'Watford'
--and cl.name = 'Bristol City'

--and cl.name = 'Norwich City'


--and at_scoring &gt; 1500
--and cl.id = 7
--order by at_pot_ability desc</sql><sql name="Ability by club 1">select cl.name, cl.fame, sum(pa.at_curr_ability), sum(pa.at_defending), sum(pa.at_passing), sum(pa.at_scoring)
from 
players p 
join players_attr pa on p.id = pa.player_id
join clubs cl on p.club_id = cl.id
left join global_val gv on 1 = 1
where gv.var_name = 'GAME_DATE' and NOT is_retired 
--and cl.name = 'Manchester City'
and cl.league_id = 1
group by cl.name, cl.fame
--order by sum(pa.at_curr_ability) desc
order by fame desc</sql><sql name="Ability by club 2">select cl.name, cl.fame, sum(pa.at_curr_ability), sum(pa.at_defending), sum(pa.at_passing), sum(pa.at_scoring)
from 
players p 
join players_attr pa on p.id = pa.player_id
join clubs cl on p.club_id = cl.id
left join global_val gv on 1 = 1
where gv.var_name = 'GAME_DATE' and NOT is_retired 
--and cl.name = 'Manchester City'
and cl.league_id = 2
group by cl.name, cl.fame
--order by sum(pa.at_curr_ability) desc
order by fame desc</sql><sql name="Scorers table 1">select * FROM (
	select full_name, player_id, position, value, count(*) as total_goals, season, club_name, competition_name from (
		select p.first_name || ' ' || p.last_name as full_name, p.id as player_id, p.position, p.value, c.name as club_name, f.fixture_date, co.name as competition_name
		
					,CASE 
					WHEN strftime('%m-%d', f.fixture_date) BETWEEN '08-01' AND '12-31'
						 THEN strftime('%Y', f.fixture_date) || '-' || (CAST(strftime('%Y', f.fixture_date) AS INTEGER) + 1)
					ELSE (CAST(strftime('%Y', f.fixture_date) AS INTEGER) - 1) || '-' || strftime('%Y', f.fixture_date)
				END AS season
		
		from  match_scorers ms
		join fixtures f on f.id = ms.fixture_id
		join clubs c on f.home_club_id = c.id or f.away_club_id = c.id 
		join clubs_competition cs on f.competition_id = cs.competition_id and c.id = cs.club_id
		join competitions co on cs.competition_id = co.id
		join players p on p.id = ms.player_id and p.club_id = c.id
		join players_attr pa on p.id = pa.player_id
	)
	group by full_name, player_id, position, value, season, club_name, competition_name
	order by count(*) desc
)
where season = '2025-2026' and competition_name = 'Premier League';

</sql><sql name="Scorers table 2">select * FROM (
	select full_name, player_id, position, value, count(*) as total_goals, season, club_name, competition_name from (
		select p.first_name || ' ' || p.last_name as full_name, p.id as player_id, p.position, p.value, c.name as club_name, f.fixture_date, co.name as competition_name
		
					,CASE 
					WHEN strftime('%m-%d', f.fixture_date) BETWEEN '08-01' AND '12-31'
						 THEN strftime('%Y', f.fixture_date) || '-' || (CAST(strftime('%Y', f.fixture_date) AS INTEGER) + 1)
					ELSE (CAST(strftime('%Y', f.fixture_date) AS INTEGER) - 1) || '-' || strftime('%Y', f.fixture_date)
				END AS season
		
		from  match_scorers ms
		join fixtures f on f.id = ms.fixture_id
		join clubs c on f.home_club_id = c.id or f.away_club_id = c.id 
		join clubs_competition cs on f.competition_id = cs.competition_id and c.id = cs.club_id
		join competitions co on cs.competition_id = co.id
		join players p on p.id = ms.player_id and p.club_id = c.id
		join players_attr pa on p.id = pa.player_id
	)
	group by full_name, player_id, position, value, season, club_name, competition_name
	order by count(*) desc
)
where season = '2025-2026' and competition_name = 'Championship';</sql><sql name="Scorers table cup">select * FROM (
	select full_name, player_id, position, value, count(*) as total_goals, season, club_name, competition_name from (
		select p.first_name || ' ' || p.last_name as full_name, p.id as player_id, p.position, p.value, c.name as club_name, f.fixture_date, co.name as competition_name
		
					,CASE 
					WHEN strftime('%m-%d', f.fixture_date) BETWEEN '08-01' AND '12-31'
						 THEN strftime('%Y', f.fixture_date) || '-' || (CAST(strftime('%Y', f.fixture_date) AS INTEGER) + 1)
					ELSE (CAST(strftime('%Y', f.fixture_date) AS INTEGER) - 1) || '-' || strftime('%Y', f.fixture_date)
				END AS season
		
		from  match_scorers ms
		join fixtures f on f.id = ms.fixture_id
		join clubs c on f.home_club_id = c.id or f.away_club_id = c.id 
		join clubs_competition cs on f.competition_id = cs.competition_id and c.id = cs.club_id
		join competitions co on cs.competition_id = co.id
		join players p on p.id = ms.player_id and p.club_id = c.id
		join players_attr pa on p.id = pa.player_id
	)
	group by full_name, player_id, position, value, season, club_name, competition_name
	order by count(*) desc
)
where season = '2025-2026' and competition_name = 'FA Cup';</sql><sql name="Old players">SELECT 
  ROUND(100.0 * old_players / total_players, 2) AS pct_old,
  old_players, 
  total_players
FROM (
  SELECT 
    SUM(CASE WHEN CAST((julianday(gv.value_date) - julianday(p.date_of_birth)) / 365.25 AS INT) &gt; 32 
             THEN 1 ELSE 0 END) AS old_players,
    COUNT(1) AS total_players
  FROM players p
  JOIN players_attr pa ON p.id = pa.player_id
  JOIN clubs cl ON p.club_id = cl.id
  LEFT JOIN global_val gv ON gv.var_name = 'GAME_DATE'
);</sql><sql name="Regens">select p.id, first_name, last_name, date_of_birth, gv.value_date-date_of_birth as agevalue, position, nationality, value/1000000, is_retired, 

--at_luck/100, 
--at_selfcont/100, 
--at_honour/100, 
--at_crazyness/100, 
at_working/100, 
--at_sexatract/100, 
--at_friendship/100, 
at_speed/100, 
at_dribbling/100, 
at_goalkeeping/100, 
at_defending/100, 
at_passing/100, 
at_scoring/100, 
--at_happiness/100, 
--at_confidence/100, 
--at_hope/100, 
at_curr_ability/10, 
at_pot_ability/10, 

cl.name
FROM players p
JOIN players_attr pa ON p.id = pa.player_id
JOIN clubs cl ON p.club_id = cl.id
LEFT JOIN global_val gv ON gv.var_name = 'GAME_DATE'
where p.id &gt; 880
</sql><sql name="Fixtures by club*">
SELECT 
f.fixture_date, c_home.name, f.home_goals, c_away.name, f.away_goals, co.name, f.season
FROM fixtures f 
LEFT JOIN clubs c_home ON c_home.id = f.home_club_id 
LEFT JOIN clubs c_away ON c_away.id = f.away_club_id 
JOIN competitions co ON f.competition_id = co.id
WHERE --f.played = 1
--GROUP BY c.id
--and 
(c_home.name = 'Preston North End' or c_away.name = 'Preston North End')
AND season = '2027/28'
ORDER by f.fixture_date

;


</sql><sql name="Cup schedule check*">SELECT 
    f.fixture_date,
    c_home.name AS home_club,
	c_home.id AS home_id_club,
    c_away.name AS away_club,
	c_away.id AS away_id_club,
    f.home_goals,
    f.away_goals,
    cc_home.is_active AS home_is_active,
    cc_away.is_active AS away_is_active, 
	f.competition_round,
	f.home_goals_pk,
	f.away_goals_pk
FROM fixtures f
JOIN clubs c_home 
    ON c_home.id = f.home_club_id
JOIN clubs c_away 
    ON c_away.id = f.away_club_id
JOIN competitions co 
    ON co.id = f.competition_id
JOIN clubs_competition cc_home 
    ON cc_home.club_id = c_home.id 
   AND cc_home.competition_id = co.id
JOIN clubs_competition cc_away 
    ON cc_away.club_id = c_away.id 
   AND cc_away.competition_id = co.id
WHERE co.id = 3
--and (home_id_club = 23 or away_club_id = 23)
and season = '2025/26'
ORDER BY f.fixture_date, c_home.name;


</sql><sql name="Top scorers total">SELECT 
    p.first_name || ' ' || p.last_name AS player,
    c.name AS club,
    SUM(1) AS total_goals,
    SUM(CASE WHEN co.name = 'Premier League' THEN 1 ELSE 0 END) AS premier_goals,
    SUM(CASE WHEN co.name = 'Championship' THEN 1 ELSE 0 END) AS championship_goals,
    SUM(CASE WHEN co.name = 'FA Cup' THEN 1 ELSE 0 END) AS facup_goals,
    (gv.value_date - p.date_of_birth) AS agevalue,
    pa.at_scoring/100.0 AS scoring_rating,
    pa.at_speed/100.0   AS speed_rating,
    p.position
	
	,CASE 
		WHEN strftime('%m-%d', f.fixture_date) BETWEEN '08-01' AND '12-31'
			 THEN strftime('%Y', f.fixture_date) || '-' || (CAST(strftime('%Y', f.fixture_date) AS INTEGER) + 1)
		ELSE (CAST(strftime('%Y', f.fixture_date) AS INTEGER) - 1) || '-' || strftime('%Y', f.fixture_date)
	END AS season
	
FROM match_scorers ms
JOIN players p       ON ms.player_id = p.id
JOIN fixtures f      ON ms.fixture_id = f.id
JOIN clubs c         ON p.club_id = c.id
JOIN competitions co ON f.competition_id = co.id
JOIN players_attr pa ON p.id = pa.player_id
LEFT JOIN global_val gv ON gv.var_name = 'GAME_DATE'
where season = '2026-2027' 
GROUP BY p.id
ORDER BY total_goals DESC;
</sql><sql name="Staff by club">select 

s.id, first_name, last_name, gv.value_date-date_of_birth as agevalue, nationality, role,
cl.name as club_name,
at_goalkeeping/100,
at_tackling/100,
at_passing/100,
at_shooting/100,
at_physio/100,
at_medical/100,
at_scouting/100,
sc.wage, sc.contract_start, sc.contract_end

from 
staff s 
join staff_attr sa on s.id = sa.staff_id
join clubs cl on s.club_id = cl.id
join staff_contract sc on s.id = sc.staff_id
left join global_val gv on 1 = 1
where gv.var_name = 'GAME_DATE' --and NOT is_retired 
--and cl.name = 'Liverpool'
--and cl.name = 'Arsenal'
--and cl.name = 'Manchester City'
--and cl.name = 'AFC Bournemouth'
--and cl.name = 'Brentford'
--and cl.name = 'Watford'
--and cl.name = 'Bristol City'

--and cl.name = 'Norwich City'


--and at_scoring &gt; 1500
--and cl.id = 7
--order by at_pot_ability desc</sql><sql name="SQL 24">
		select p.first_name || ' ' || p.last_name as full_name, p.id as player_id, p.position, p.value, c.name as club_name, f.fixture_date
		
					,CASE 
					WHEN strftime('%m-%d', f.fixture_date) BETWEEN '08-01' AND '12-31'
						 THEN strftime('%Y', f.fixture_date) || '-' || (CAST(strftime('%Y', f.fixture_date) AS INTEGER) + 1)
					ELSE (CAST(strftime('%Y', f.fixture_date) AS INTEGER) - 1) || '-' || strftime('%Y', f.fixture_date)
				END AS season
		
		from  match_scorers ms
		join fixtures f on f.id = ms.fixture_id
		join clubs c on f.home_club_id = c.id or f.away_club_id = c.id 
		join clubs_competition cs on f.competition_id = cs.competition_id and c.id = cs.club_id
		join players p on p.id = ms.player_id and p.club_id = c.id
		join players_attr pa on p.id = pa.player_id
		where cs.competition_id = 3</sql><sql name="SQL 25">            SELECT IFNULL(MAX(competition_round), 0)+1
            FROM fixtures f
    		LEFT JOIN global_val gv on 1 = 1 and gv.var_name = 'GAME_DATE'
            WHERE competition_id = 3 and played = 0</sql><current_tab id="13"/></tab_sql></sqlb_project>
